{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "üëã Bienvenido al proyecto",
  "steps": [
    {
      "file": "pruebas/01-reading-list/manuelsanchez2/README.md",
      "description": "Este es el porqu√© del proyecto. Aqu√≠ encontrar√°s los requisitos y los extras que el cliente quiere, adem√°s del tech stack actual.",
      "line": 11,
      "title": "Motivaci√≥n - Empezamos en el README"
    },
    {
      "file": "pruebas/01-reading-list/manuelsanchez2/src/ctx/ctx.tsx",
      "description": "En el contexto es donde tenemos no solo todos los libros, sino la lista de libros con las preferencias del usuario.\nHacemos que se activen los useVisibleTasks$ cuando haya cambios en el localStorage y luego hacemos un merge con los libros para siempre tener el estado actualizado.",
      "line": 27,
      "title": "El contexto"
    },
    {
      "file": "pruebas/01-reading-list/manuelsanchez2/src/components/reading-list/reading-list.tsx",
      "description": "Aqu√≠ es donde sacamos la lista de lectura al filtrar por la propiedad.",
      "line": 21,
      "title": "Lista de lectura"
    },
    {
      "file": "pruebas/01-reading-list/manuelsanchez2/src/routes/index.tsx",
      "description": "Aqu√≠ es donde gestionamos los filtros que el usuario selecciona en la vista.",
      "line": 33,
      "title": "Animaci√≥n de los libros "
    },
    {
      "file": "pruebas/01-reading-list/manuelsanchez2/src/components/books-list/books-list.tsx",
      "description": "Aqu√≠ tenemos los libros filtrados dependiendo del g√©nero, del t√≠tulo y del n√∫mero de p√°ginas. El hacerlo directamente aqu√≠ con useComputed$ deja la puerta a a√±adir o eliminar cualquier otro tipo de filtro f√°cilmente.",
      "line": 14,
      "title": "Filtros del usuario (g√©nero, t√≠tulo, n√∫mero de p√°ginas...)"
    }
  ]
}